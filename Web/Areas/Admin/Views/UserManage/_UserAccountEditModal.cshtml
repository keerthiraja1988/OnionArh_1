@model Web.Models.UserAccountViewModel

<!-- Modal -->
<div id="userDetailsEditModel" class="modal fade" role="dialog" tabindex="-1" aria-hidden="true" data-backdrop="static"
     style="overflow-y:auto"
      data-keyboard="false">
    <div class="modal-dialog" id="userDetailsEditModelDialog" style="width:80%;margin-left: auto;margin-right: auto;margin-top:10%;">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header" id="userDetailsEditModelHeader" style="cursor:move;">

                <h5 class="modal-title"> <i class="fas fa-edit"></i> Edit User Details</h5>
            </div>
            <div class="modal-body" style="padding-top: 0px;padding-bottom:5px ; padding-left:5px ;padding-right:5px">

                @using (Ajax.BeginForm("SaveUserDetails", "UserManage", new { area = "Admin" }, new AjaxOptions { HttpMethod = "POST", OnSuccess = "onAjaxRequestSuccess" }, new { @id = "AjaxformId", @class = "form-horizontal", role = "form" }))
            {
                    @Html.AntiForgeryToken()

                    <div class="row">
                        <div class="col-lg-9 col-md-9   col-sm-12  col-xs-12">
                            <div class="row">
                                <div class="col-lg-2 col-md-2   col-sm-4  col-xs-12">

                                    <span style="padding-top: 7px;">User Name</span>

                                </div>

                                <div class="col-lg-4 col-md-4   col-sm-8  col-xs-12">
                                    @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })

                                </div>

                                <div class="col-lg-2 col-md-2   col-sm-4  col-xs-12">

                                    <span style="padding-top: 7px;">User Id</span>

                                </div>

                                <div class="col-lg-4 col-md-4    col-sm-8  col-xs-12">
                                    @Html.EditorFor(model => model.UserId, new { htmlAttributes = new { @class = "form-control" } })

                                </div>



                            </div>

                            <div class="row">
                                <div class="col-lg-2 col-md-2   col-sm-4  col-xs-12">

                                    <span style="padding-top: 7px;">First Name</span>

                                </div>

                                <div class="col-lg-4 col-md-4   col-sm-8  col-xs-12">
                                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })

                                </div>

                                <div class="col-lg-2 col-md-2   col-sm-4  col-xs-12">

                                    <span style="padding-top: 7px;">Last Name</span>

                                </div>

                                <div class="col-lg-4 col-md-4    col-sm-8  col-xs-12">
                                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })

                                </div>



                            </div>

                            <div class="row">
                                <div class="col-lg-2 col-md-2   col-sm-4  col-xs-12">

                                    <span style="padding-top: 7px;">Email Id</span>

                                </div>

                                <div class="col-lg-4 col-md-4   col-sm-8  col-xs-12">
                                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })

                                </div>

                            </div>

                        </div>
                        <div class="col-lg- col-md-3   col-sm-12  col-xs-12">
                            <div class="row">
                                <div class="col-lg-12">
                                    <h5 style="margin-top: 0px;    margin-bottom: 0px; "> Assigned Roles To Users </h5>
                                    <div class="row" style="padding-left:70px">
                                        @for (int i = 0; i < Model.Roles.Count(); i++)
                                        {

                                            <div class="checkbox">
                                                <span>


                                                    @Html.CheckBoxFor(m => m.Roles[i].RoleActive, new { @checked = "checked" })

                                                    @Html.DisplayFor(m => m.Roles[i].RoleName)

                                                    @Html.HiddenFor(m => m.Roles[i].RoleId)
                                                    @Html.HiddenFor(m => m.Roles[i].RoleName)
                                                </span>
                                            </div>
                                        }
                                    </div>

                                </div>
                            </div>





                        </div>
                    </div>

                }
            </div>
            <div class="modal-footer">

                <button id="userDetailsEditModelSaveBtn" type="button" class="btn btn-primary">
                    <i class="fas fa-save fontawesomeIconSpace"></i>
                    <span class="paddingLeft5px">Save</span>
                </button>


                <button id="userDetailsEditModelCloseBtn" type="button" class="btn btn-info">
                    <i class="fas fa-times fontawesomeIconSpace"></i>
                    <span class="paddingLeft5px">Close</span>
                </button>
            </div>
        </div>

    </div>
</div>

<script>

    $(function () {
        $("#userDetailsEditModelDialog").draggable(
            {
                handle: "#userDetailsEditModelHeader"
            }
            );
        $(".modal-title").disableSelection();
        //$('.modal-dialog').resizable({
        //    //alsoResize: ".modal-dialog",
        //    //minHeight: 150
        //});
    });


    $("#userDetailsEditModelSaveBtn").click(function () {
        $("#AjaxformId").submit();
    });

    $("#userDetailsEditModelCloseBtn").click(function () {
        $('#userDetailsEditModel').modal('hide');

        setTimeout(
           function () {
               $('#userDetailsEditModel').remove();
           }, 500);
    });


    $("#AjaxformId").submit(function (event) {
       
        JsMain.ShowLoaddingIndicator();
        var dataString;
        event.preventDefault();
        event.stopImmediatePropagation();
        var action = $("#AjaxformId").attr("action");
        // Setting.
        dataString = new FormData($("#AjaxformId").get(0));
        contentType = false;
        processData = false;
        $.ajax({
            type: "POST",
            url: action,
            data: dataString,
            dataType: "json",
            contentType: contentType,
            processData: processData,
            begin: function () {
               
            },
            success: function (result) {
                // Result.
                setTimeout(
                  function () {
                      $("#userDetailsEditModel").modal('hide');
                      $('#userDetailsEditModel').remove();
                      JsMain.HideLoaddingIndicator();

                      if (result == '0') {
                          JsMain.ShowRelaodMessageModal("Message", "User Details Edited Successfully");
                      }
                      else {
                          JsMain.ShowRelaodMessageModal("Message", "An Error Occured. Unable to process you request currently. Please Contact system adminstartor");

                      }

                  }, 500);


            },
            error: function (jqXHR, textStatus, errorThrown) {
                //do your own thing
                alert("fail");
            }
        });
    }); //end .submit()

    $("#applicationCacheEditModelSaveBtn").click(function () {

        JsMain.ShowLoaddingIndicator();

        var key = $('#Key').val();
        var value = $('#Value').val();

        var dataToSend = { Key: key, Value: value };

        var url = "@Url.RouteUrl(new {controller = "CacheManage", action = "UpdateApplicationCacheValue", area = "Admin" })";

        $.ajax({
            type: "POST",
            url: url,
            data: JSON.stringify(dataToSend),
            contentType: 'application/json; charset=utf-8',
            dataType: 'text',
            success: function (data) {
                JsMain.HideLoaddingIndicator();
                $("#userDetailsEditModel").modal('hide');

                setTimeout(
                  function () {
                      $('#userDetailsEditModel').remove();
                  }, 1000);


                JsMain.ShowRelaodMessageModal('Message', 'Application Cache Updation Success');

            },
            error: function (data) {
                alert(data);
            },
            complete: function (data) {


            }

        });
    });



    function UpdateAppCache() {
        debugger;

    };

</script>